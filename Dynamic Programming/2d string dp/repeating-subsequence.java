/*
Repeating Sub-Sequence

Given a string, find if there is any sub-sequence that repeats itself.
A sub-sequence of a string is defined as a sequence of characters generated by deleting some characters in the string
without changing the order of the remaining characters.

Input:
string

Output:

0/1
0 -> No
1 -> Yes 
Example:

abab ------> yes, ab is repeated. So, return 1. 
abba ------> No, a and b follow different order. So, return 0. 
NOTE : sub-sequence length should be greater than or equal to 2

https://www.interviewbit.com/problems/repeating-subsequence/
*/

public class Solution {
    int[][] memo;
    public int anytwo(String A) {
        int n = A.length();
        memo = new int[n + 1][];
        for (int i = 0; i <= n; i++) {
            memo[i] = new int[n + 1];
        }
        int res = lcs(A, A, 0, 0);
        if (res >= 2) {
            return 1;
        } else {
            return 0;
        }
    }
    
    int lcs(String A, String B, int i, int j) {
        if (i == A.length() || j == B.length()) {
            return 0;
        }
        if (memo[i][j] == 1) {
            return 0;
        }
        int res = 0;
        if (i != j && A.charAt(i) == B.charAt(j)) {
            res = 1 + lcs(A, B, i + 1, j + 1);
        } else {
            res = Math.max(lcs(A, B, i, j + 1), lcs(A, B, i + 1, j));
        }
        memo[i][j] = 1;
        return res;
    }
}
